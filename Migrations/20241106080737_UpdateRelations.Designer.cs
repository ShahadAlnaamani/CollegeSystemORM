// <auto-generated />
using System;
using CollegeSystem;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CollegeSystem.Migrations
{
    [DbContext(typeof(CollegeDbContext))]
    [Migration("20241106080737_UpdateRelations")]
    partial class UpdateRelations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CollegeSystem.Models.Courses", b =>
                {
                    b.Property<int>("courseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("courseID"));

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DID")
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.HasKey("courseID");

                    b.HasIndex("DID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("CollegeSystem.Models.Departments", b =>
                {
                    b.Property<int>("Dept_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Dept_ID"));

                    b.Property<int>("DepT_Name")
                        .HasColumnType("int");

                    b.HasKey("Dept_ID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("CollegeSystem.Models.Exams", b =>
                {
                    b.Property<int>("Exam_Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Exam_Code"));

                    b.Property<int>("DID")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("Room_No")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("Time")
                        .HasColumnType("time");

                    b.HasKey("Exam_Code");

                    b.HasIndex("DID");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("CollegeSystem.Models.Faculty", b =>
                {
                    b.Property<int>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("F_Id"));

                    b.Property<int>("DID")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentsDept_ID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("Salary")
                        .HasMaxLength(10000)
                        .HasColumnType("real");

                    b.HasKey("F_Id");

                    b.HasIndex("DepartmentsDept_ID");

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("CollegeSystem.Models.Faculty_Mobile", b =>
                {
                    b.Property<int>("FID")
                        .HasColumnType("int");

                    b.Property<string>("Mobile_No")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("FID", "Mobile_No");

                    b.ToTable("Faculty_Mobiles");
                });

            modelBuilder.Entity("CollegeSystem.Models.Hostels", b =>
                {
                    b.Property<int>("Host_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Host_ID"));

                    b.Property<string>("Host_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("No_Of_Seats")
                        .HasColumnType("int");

                    b.HasKey("Host_ID");

                    b.ToTable("Hostels");
                });

            modelBuilder.Entity("CollegeSystem.Models.Student_Phones", b =>
                {
                    b.Property<int>("SID")
                        .HasColumnType("int");

                    b.Property<string>("Phone_No")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SID", "Phone_No");

                    b.ToTable("Student_Phones");
                });

            modelBuilder.Entity("CollegeSystem.Models.Students", b =>
                {
                    b.Property<int>("S_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("S_ID"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly>("DOB")
                        .HasColumnType("date");

                    b.Property<int>("FID")
                        .HasColumnType("int");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Host_ID")
                        .HasColumnType("int");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("zipcode")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.HasKey("S_ID");

                    b.HasIndex("FID");

                    b.HasIndex("Host_ID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("CollegeSystem.Models.Subjects", b =>
                {
                    b.Property<int>("Subject_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Subject_ID"));

                    b.Property<int>("F_ID")
                        .HasColumnType("int");

                    b.Property<int>("FacultiesF_Id")
                        .HasColumnType("int");

                    b.Property<string>("Subject_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Subject_ID");

                    b.HasIndex("FacultiesF_Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("CoursesStudents", b =>
                {
                    b.Property<int>("CoursescourseID")
                        .HasColumnType("int");

                    b.Property<int>("StudentsS_ID")
                        .HasColumnType("int");

                    b.HasKey("CoursescourseID", "StudentsS_ID");

                    b.HasIndex("StudentsS_ID");

                    b.ToTable("CoursesStudents");
                });

            modelBuilder.Entity("CollegeSystem.Models.Courses", b =>
                {
                    b.HasOne("CollegeSystem.Models.Departments", "Departments")
                        .WithMany("Courses")
                        .HasForeignKey("DID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("CollegeSystem.Models.Exams", b =>
                {
                    b.HasOne("CollegeSystem.Models.Departments", "Departments")
                        .WithMany("Exams")
                        .HasForeignKey("DID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("CollegeSystem.Models.Faculty", b =>
                {
                    b.HasOne("CollegeSystem.Models.Departments", "Departments")
                        .WithMany("Faculties")
                        .HasForeignKey("DepartmentsDept_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("CollegeSystem.Models.Faculty_Mobile", b =>
                {
                    b.HasOne("CollegeSystem.Models.Faculty", "faculty")
                        .WithMany("Faculty_Mobiles")
                        .HasForeignKey("FID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("faculty");
                });

            modelBuilder.Entity("CollegeSystem.Models.Student_Phones", b =>
                {
                    b.HasOne("CollegeSystem.Models.Students", "Student")
                        .WithMany("Student_Phones")
                        .HasForeignKey("SID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CollegeSystem.Models.Students", b =>
                {
                    b.HasOne("CollegeSystem.Models.Faculty", "Faculty")
                        .WithMany("Students")
                        .HasForeignKey("FID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CollegeSystem.Models.Hostels", "Hostels")
                        .WithMany("Students")
                        .HasForeignKey("Host_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");

                    b.Navigation("Hostels");
                });

            modelBuilder.Entity("CollegeSystem.Models.Subjects", b =>
                {
                    b.HasOne("CollegeSystem.Models.Faculty", "Faculties")
                        .WithMany()
                        .HasForeignKey("FacultiesF_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculties");
                });

            modelBuilder.Entity("CoursesStudents", b =>
                {
                    b.HasOne("CollegeSystem.Models.Courses", null)
                        .WithMany()
                        .HasForeignKey("CoursescourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CollegeSystem.Models.Students", null)
                        .WithMany()
                        .HasForeignKey("StudentsS_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CollegeSystem.Models.Departments", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Exams");

                    b.Navigation("Faculties");
                });

            modelBuilder.Entity("CollegeSystem.Models.Faculty", b =>
                {
                    b.Navigation("Faculty_Mobiles");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("CollegeSystem.Models.Hostels", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("CollegeSystem.Models.Students", b =>
                {
                    b.Navigation("Student_Phones");
                });
#pragma warning restore 612, 618
        }
    }
}
